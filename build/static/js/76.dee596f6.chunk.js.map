{"version":3,"sources":["app/views/ui-kits/popover/AppPopover.jsx","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"names":["popover","props","id","Header","as","Body","AppPopover","state","routeSegments","name","path","className","title","trigger","placement","overlay","variant","map","dir","key","delay","show","hide","Component","_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","Button","React","_ref","ref","asProp","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","_jsx","displayName","bsPrefix","size","active","prefix","useBootstrapPrefix","classNames","defaultProps"],"mappings":"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","file":"static/js/76.dee596f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { Button, Popover, OverlayTrigger } from \"react-bootstrap\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\n\r\nconst popover = (props) => (\r\n  <Popover id=\"popover-basic\" {...props}>\r\n    <Popover.Header as=\"h3\">Popover right</Popover.Header>\r\n    <Popover.Body>\r\n      And here's some <strong>amazing</strong> content. It's very engaging.\r\n      right?\r\n    </Popover.Body>\r\n  </Popover>\r\n);\r\n\r\nclass AppPopover extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"UI Kits\", path: \"/uikits\" },\r\n            { name: \"Popover\" },\r\n          ]}\r\n        ></Breadcrumb>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <SimpleCard title=\"example\" className=\"mb-4\">\r\n              <OverlayTrigger\r\n                trigger=\"click\"\r\n                placement=\"right\"\r\n                overlay={popover}\r\n              >\r\n                <Button className=\"text-white\" variant=\"danger\">\r\n                  Click to toggle popover\r\n                </Button>\r\n              </OverlayTrigger>\r\n            </SimpleCard>\r\n          </div>\r\n\r\n          <div className=\"col-md-12\">\r\n            <SimpleCard title=\"four directions\" className=\"mb-4\">\r\n              <p>\r\n                Four options are available: top, right, bottom, and left\r\n                aligned.\r\n              </p>\r\n\r\n              {[\"top\", \"right\", \"bottom\", \"left\", \"auto\"].map((dir) => (\r\n                <OverlayTrigger\r\n                  key={dir}\r\n                  trigger=\"click\"\r\n                  placement={dir}\r\n                  overlay={popover}\r\n                >\r\n                  <Button className=\"me-2\">Popover on {dir}</Button>\r\n                </OverlayTrigger>\r\n              ))}\r\n            </SimpleCard>\r\n          </div>\r\n\r\n          <div className=\"col-md-12\">\r\n            <SimpleCard title=\"hover with auto dismiss\" className=\"mb-4\">\r\n              <OverlayTrigger\r\n                trigger=\"hover\"\r\n                placement=\"right\"\r\n                overlay={popover}\r\n                delay={{ show: 250, hide: 400 }}\r\n              >\r\n                <Button className=\"text-white\" variant=\"danger\">\r\n                  Dismissible popover\r\n                </Button>\r\n              </OverlayTrigger>\r\n            </SimpleCard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppPopover;\r\n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}