{"version":3,"sources":["app/views/ui-kits/tooltip/AppTooltip.jsx","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"names":["AppTooltip","state","variantList","routeSegments","name","path","className","title","map","placement","i","key","overlay","id","variant","trigger","delay","show","hide","Component","_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","Button","React","_ref","ref","asProp","as","props","source","excluded","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","_jsx","displayName","bsPrefix","size","active","prefix","useBootstrapPrefix","classNames","defaultProps"],"mappings":"yNAKMA,E,4MACJC,MAAQ,G,EAERC,YAAc,CAAC,UAAW,UAAW,OAAQ,W,4CAE7C,WAAU,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,cAIZ,yBAAKE,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,kBAChB,uBAAGD,UAAU,aAAb,mGAIA,yBAAKA,UAAU,OACZ,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAACC,EAAWC,GAAZ,OACtC,yBAAKJ,UAAU,WAAWK,IAAKF,GAC7B,kBAAC,IAAD,CACEA,UAAWA,EACXG,QACE,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,IAAxB,cACa,gCAASA,GADtB,MAKF,kBAAC,IAAD,CAAQK,QAAS,EAAKZ,YAAYQ,IAAlC,cACcD,YAU5B,yBAAKH,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,oBAChB,uBAAGD,UAAU,aAAb,yBACA,yBAAKA,UAAU,OACZ,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAACC,EAAWC,GAAZ,OACtC,yBAAKJ,UAAU,WAAWK,IAAKF,GAC7B,kBAAC,IAAD,CACEM,QAAQ,QACRN,UAAWA,EACXG,QACE,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,IAAxB,cACa,gCAASA,GADtB,MAKF,kBAAC,IAAD,CAAQK,QAAS,EAAKZ,YAAYQ,IAAlC,cACcD,YAU5B,yBAAKH,UAAU,YACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAYC,MAAM,mBAChB,yBAAKD,UAAU,OACZ,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAACC,EAAWC,GAAZ,OACtC,yBAAKJ,UAAU,WAAWK,IAAKF,GAC7B,kBAAC,IAAD,CACEA,UAAWA,EACXO,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BN,QACE,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,IAAxB,cACa,gCAASA,GADtB,MAKF,kBAAC,IAAD,CAAQK,QAAS,EAAKZ,YAAYQ,IAAlC,cACcD,iB,GAvFXU,aAqGVnB,a,6FC1GToB,EAAY,CAAC,KAAM,YASlB,SAASC,EAAT,GASJ,IARDC,EAQC,EARDA,QACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,KACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QAGC,IAFDC,gBAEC,MAFU,EAEV,EADDC,EACC,EADDA,KAEKP,IAEDA,EADU,MAARE,GAA0B,MAAVC,GAAyB,MAAPC,EAC1B,IAEA,UAId,IAAMI,EAAO,CACXR,WAGF,GAAgB,WAAZA,EACF,MAAO,CAAC,CACNO,KAAMA,GAAQ,SACdN,YACCO,GAGL,IAAMC,EAAc,SAAAC,IACdT,GAAwB,MAAZD,GAjCb,SAAuBE,GAC5B,OAAQA,GAAwB,MAAhBA,EAAKS,OAgCgBC,CAAcV,KAC/CQ,EAAMG,iBAGJZ,EACFS,EAAMI,kBAIG,MAAXT,GAA2BA,EAAQK,IAUrC,MAAO,CAAC,CACNK,KAAM,SAGNd,cAAUe,EACVV,SAAUL,OAAWe,EAAYV,EACjCJ,KAAkB,MAAZF,GAAmBC,OAAWe,EAAYd,EAChDC,OAAoB,MAAZH,EAAkBG,OAASa,EACnC,gBAAkBf,QAAWe,EAC7BZ,IAAiB,MAAZJ,EAAkBI,OAAMY,EAC7BX,QAASI,EACTQ,UAlBoB,SAAAP,GACF,MAAdA,EAAMrB,MACRqB,EAAMG,iBACNJ,EAAYC,MAgBbF,GAEL,IAAMU,EAAsBC,cAAiB,SAACC,EAAMC,GAClD,IACMC,EAEFF,EAFFG,GACAtB,EACEmB,EADFnB,SAEEuB,EA3EN,SAAuCC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,GAAI,IAA2DpC,EAAKD,EAA5De,EAAS,GAAQwB,EAAaC,OAAOC,KAAKJ,GAAqB,IAAKrC,EAAI,EAAGA,EAAIuC,EAAWG,OAAQ1C,IAAOC,EAAMsC,EAAWvC,GAAQsC,EAASK,QAAQ1C,IAAQ,IAAac,EAAOd,GAAOoC,EAAOpC,IAAQ,OAAOc,EA2E5R6B,CAA8BZ,EAAMtB,GAEhD,EAEKC,EAAe6B,OAAOK,OAAO,CAChCjC,QAASsB,EACTrB,YACCuB,IALH,mBAAOU,EAAP,KACWrC,EADX,KACEG,QAKF,OAAoBmC,cAAKtC,EAAW+B,OAAOK,OAAO,GAAIT,EAAOU,EAAa,CACxEb,IAAKA,QAGTH,EAAOkB,YAAc,SACNlB,O,qKChFTA,EAAsBC,cAAiB,WAQ1CE,GAAQ,IAPTE,EAOS,EAPTA,GACAc,EAMS,EANTA,SACA7C,EAKS,EALTA,QACA8C,EAIS,EAJTA,KACAC,EAGS,EAHTA,OACAvD,EAES,EAFTA,UACGwC,EACM,iBACHgB,EAASC,YAAmBJ,EAAU,OAC5C,EAEKtC,YAAe,aAClBC,QAASuB,GACNC,IAJL,mBAAOU,EAAP,KAMMrC,EANN,KACEG,QAMF,OAAoBmC,cAAKtC,EAAD,YAAC,2BAAgB2B,GACpCU,GADmB,IAEtBb,IAAKA,EACLrC,UAAW0D,IAAW1D,EAAWwD,EAAQD,GAAU,SAAU/C,GAAW,GAAJ,OAAOgD,EAAP,YAAiBhD,GAAW8C,GAAQ,GAAJ,OAAOE,EAAP,YAAiBF,GAAQd,EAAMtB,MAAQsB,EAAMvB,UAAY,kBAGjKiB,EAAOkB,YAAc,SACrBlB,EAAOyB,aA7Bc,CACnBnD,QAAS,UACT+C,QAAQ,EACRtC,UAAU,GA2BGiB","file":"static/js/78.6fc6a2af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport { OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\r\n\r\nclass AppTooltip extends Component {\r\n  state = {};\r\n\r\n  variantList = [\"primary\", \"success\", \"info\", \"warning\"];\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"UI Kits\", path: \"/uikits\" },\r\n            { name: \"Tooltip\" }\r\n          ]}\r\n        ></Breadcrumb>\r\n\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-12 mb-4\">\r\n            <SimpleCard title=\"Basic Tooltips\">\r\n              <p className=\"pt-0 mt-0\">\r\n                Hover over the buttons below to see the four tooltips\r\n                directions: top, right, bottom, and left.\r\n              </p>\r\n              <div className=\"row\">\r\n                {[\"top\", \"right\", \"bottom\", \"left\"].map((placement, i) => (\r\n                  <div className=\"col-md-3\" key={placement}>\r\n                    <OverlayTrigger\r\n                      placement={placement}\r\n                      overlay={\r\n                        <Tooltip id={`tooltip-${placement}`}>\r\n                          Tooltip on <strong>{placement}</strong>.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <Button variant={this.variantList[i]}>\r\n                        Tooltip on {placement}\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </SimpleCard>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-12 mb-4\">\r\n            <SimpleCard title=\"Tooltips Trigger\">\r\n              <p className=\"pt-0 mt-0\">Click to show tooltip</p>\r\n              <div className=\"row\">\r\n                {[\"top\", \"right\", \"bottom\", \"left\"].map((placement, i) => (\r\n                  <div className=\"col-md-3\" key={placement}>\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement={placement}\r\n                      overlay={\r\n                        <Tooltip id={`tooltip-${placement}`}>\r\n                          Tooltip on <strong>{placement}</strong>.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <Button variant={this.variantList[i]}>\r\n                        Tooltip on {placement}\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </SimpleCard>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-12 mb-4\">\r\n            <SimpleCard title=\"Tooltip Options\">\r\n              <div className=\"row\">\r\n                {[\"top\", \"right\", \"bottom\", \"left\"].map((placement, i) => (\r\n                  <div className=\"col-md-3\" key={placement}>\r\n                    <OverlayTrigger\r\n                      placement={placement}\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={\r\n                        <Tooltip id={`tooltip-${placement}`}>\r\n                          Tooltip on <strong>{placement}</strong>.\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <Button variant={this.variantList[i]}>\r\n                        Tooltip on {placement}\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </SimpleCard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTooltip;\r\n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}