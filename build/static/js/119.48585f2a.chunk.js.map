{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","app/views/sessions/stylesSignIn.js","app/views/sessions/Signin.jsx"],"names":["strings","raw","StyleSignIn","styled","div","slice","Object","freeze","defineProperties","value","SigninSchema","yup","shape","email","required","password","min","connect","state","loginWithEmailAndPassword","PropTypes","func","isRequired","user","useState","className","src","color-scheme","type","id","name","checked","onChange","e","document","getElementById","display","for","initialValues","validationSchema","onSubmit","isSubmitting","props","values","errors","handleChange","touched","handleBlur","handleSubmit","htmlFor","onBlur","to"],"mappings":"6NAA+CA,EAASC,ECE3CC,E,QAAcC,EAAOC,IAAV,IDFuBJ,ECEvB,g+CDDjBC,IACHA,EAAMD,EAAQK,MAAM,ICAA,EDGfC,OAAOC,OAAOD,OAAOE,iBAAiBR,EAAS,CACpDC,IAAK,CACHQ,MAAOH,OAAOC,OAAON,S,SEGrBS,EAAeC,WAAaC,MAAM,CACtCC,MAAOF,WAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUJ,WAEPK,IAAI,EAAG,qCACPF,SAAS,0BAiRCG,uBALS,SAACC,GAAD,MAAY,CAClCC,0BAA2BC,IAAUC,KAAKC,WAC1CC,KAAML,EAAMK,QAG0B,CACtCJ,+BADaF,EA9QA,WAcb,IAIA,EAA0BO,mBAJP,CACjBX,MAAO,GACPE,SAAU,KAEZ,mBAAOG,EAAP,UAWA,OACE,kBAAChB,EAAD,KAyGE,6BACE,yBAAKuB,UAAU,oBACb,yBAAKC,IAAI,4BACT,yBAAKD,UAAU,WAAWE,eAAa,SACrC,6BACA,2BACEC,KAAK,QACLC,GAAG,gBACHC,KAAK,QACLrB,MAAM,gBACNsB,SAAO,EACPC,SAAU,SAACC,GAvHrBC,SAASC,eAAe,aAAaC,QAAU,UAyHvC,2BAAOC,IAAI,iBAAX,mBAEA,6BACA,2BACET,KAAK,QACLC,GAAG,aACHC,KAAK,QACLrB,MAAM,eAGR,2BAAO4B,IAAI,cAAX,iBAGF,yBAAKR,GAAG,aACA,kBAAC,IAAD,CACES,cAAepB,EACfqB,iBAAkB7B,EAClB8B,SAlJG,SAAC/B,EAAD,GAA6B,EAAnBgC,aAC7B,EAAKC,MAAMvB,0BAA0BV,MAmJpB,gBACCkC,EADD,EACCA,OACAC,EAFD,EAECA,OAEAC,GAJD,EAGCC,QAHD,EAICD,cACAE,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,EAOCP,aAPD,OASC,0BAAMD,SAAUQ,GACb,yBAAKvB,UAAU,cACd,2BAAOwB,QAAQ,QAAf,mBACA,2BACExB,UAAU,sDACVG,KAAK,OACLE,KAAK,OACLE,SAAUa,EACVK,OAAQH,EACRtC,MAAOkC,EAAOb,OAEfc,EAAOd,MACN,yBAAKL,UAAU,yBACZmB,EAAOd,OAId,yBAAKL,UAAU,cACb,2BAAOwB,QAAQ,SAAf,YACA,2BACExB,UAAU,sDACVG,KAAK,QACLE,KAAK,QACLE,SAAUa,EACVK,OAAQH,EACRtC,MAAOkC,EAAO9B,QAEf+B,EAAO/B,OACN,yBAAKY,UAAU,yBACZmB,EAAO/B,QAId,yBAAKY,UAAU,cACb,2BAAOwB,QAAQ,YAAf,YACA,2BACExB,UAAU,oCACVG,KAAK,WACLE,KAAK,WACLE,SAAUa,EACVK,OAAQH,EACRtC,MAAOkC,EAAO5B,WAEf6B,EAAO7B,UACN,yBAAKU,UAAU,yBACZmB,EAAO7B,WAId,yBAAKU,UAAU,eACf,6BACE,2BAAOG,KAAK,aACb,+CAEF,yBAAKH,UAAU,UACf,iDAKC,4BACEA,UAAU,8CACVG,KAAK,SACLC,GAAG,aAHL,eAWd,yBAAKJ,UAAU,mBACP,kBAAC,IAAD,CACE0B,GAAG,kBACH1B,UAAU,iCACVI,GAAG,iBAHL","file":"static/js/119.48585f2a.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from \"styled-components\";\r\n\r\nexport const StyleSignIn = styled.div`\r\n.auth-layout-wrap {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0px;\r\n    gap: 30px;\r\n   \r\n}\r\n.selected {\r\n    display: flex;\r\nflex-direction: row;\r\npadding: 0px;\r\ngap: 36px;\r\n}\r\ninput[name=\"login\"] {\r\n    accent-color:#00CDC2;\r\n    ;\r\n    color-scheme: light;\r\n   }\r\n   [color-scheme=\"light\"] {\r\n    color-scheme: light;\r\n  }\r\n#formLogin {\r\n    width: 380px\r\n   \r\n}\r\n.form-group label {\r\n    width: 205px;\r\n  height: 20px;\r\nfont-style: normal;\r\nfont-weight: 600;\r\nfont-size: 16px;\r\nline-height: 20px;\r\n/* identical to box height, or 125% */\r\n\r\n\r\n/* Neutral/70 */\r\n\r\ncolor: #4D4D4D;\r\n}\r\n.form-control {\r\n    border-radius: 5px;\r\n    border: 1px solid #E5E5E5;\r\n    background-color: #E5E5E5\r\n    height: 50px\r\n}\r\n.rememberBox {\r\n    display: flex;\r\n}\r\n.forgot {\r\n    margin-left: 120px;\r\n    width: 153px;\r\nheight: 19px;\r\n\r\n\r\nfont-style: normal;\r\nfont-weight: 700;\r\nfont-size: 14px;\r\nline-height: 19px;\r\n/* identical to box height */\r\ncolor: #00CDC2;\r\ntext-align: right;\r\ntext-decoration-line: underline;\r\n\r\n}\r\n#btn-login {\r\n    background: linear-gradient(0deg, #00CDC2, #00CDC2), #FFFFFF;\r\n    border :none\r\n    height: 50px;\r\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);\r\n    border-radius: 25px;\r\n}\r\n#btn-signUpNew {\r\n    width: 212px;\r\nheight: 19px;\r\nfont-style: normal;\r\nfont-weight: 700;\r\nfont-size: 14px;\r\nline-height: 19px;\r\ndisplay: flex;\r\nalign-items: center;\r\ntext-align: center;\r\ntext-decoration-line: underline;\r\ncolor: #00CDC2;\r\n\r\n}\r\n`\r\n","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { loginWithEmailAndPassword } from \"app/redux/actions/LoginActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { StyleSignIn } from \"./stylesSignIn\";\r\nimport { Label } from \"recharts\";\r\nconst SigninSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must be 8 character long\")\r\n    .required(\"password is required\"),\r\n});\r\n\r\nconst Signin = () => {\r\n  // state = {\r\n  //   email: \"watson@example.com\",\r\n  //   password: \"12345678\",\r\n  // };\r\n\r\n  // handleChange = (event) => {\r\n  //   event.persist();\r\n  //   this.setState({ [event.target.name]: event.target.value });\r\n  // };\r\n\r\n  // handleSubmit = (value, { isSubmitting }) => {\r\n  //   this.props.loginWithEmailAndPassword(value);\r\n  // };\r\n  let initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n  const handleSubmit = (value, { isSubmitting }) => {\r\n    this.props.loginWithEmailAndPassword(value);\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  const checked = () => {\r\n    document.getElementById(\"formLogin\").display = \"none\"         \r\n  }\r\n  return (\r\n    <StyleSignIn>\r\n      {/* <div\r\n        className=\"auth-layout-wrap\"\r\n        \r\n      >\r\n        <div className=\"auth-content\">\r\n         \r\n           \r\n             \r\n                \r\n                  <div className=\"auth-logo text-center mb-4\">\r\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n                  </div>\r\n                  <h1 className=\"mb-3 text-18\">Sign In</h1>\r\n                  <Formik\r\n                    initialValues={state}\r\n                    validationSchema={SigninSchema}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">Email address</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                          />\r\n                          {errors.email && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"password\">Password</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                          />\r\n                          {errors.password && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-rounded btn-primary w-100 my-1 mt-2\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Sign In\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n\r\n                  <div className=\"mt-3 text-center\">\r\n                    <Link to=\"/session/forgot-password\" className=\"text-muted\">\r\n                      <u>Forgot Password?</u>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-6 text-center \"\r\n                style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\r\n                }}\r\n              >\r\n                <div className=\"pe-3 auth-right\">\r\n                  <Link\r\n                    to=\"/session/signup\"\r\n                    className=\"btn btn-rounded btn-outline-primary btn-outline-email w-100 my-1 btn-icon-text\"\r\n                  >\r\n                    <i className=\"i-Mail-with-At-Sign\"></i> Sign up with Email\r\n                  </Link>\r\n\r\n                  <Button className=\"btn btn-rounded btn-outline-google w-100 my-1 btn-icon-text\">\r\n                    <i className=\"i-Google-Plus\"></i> Sign up with Google\r\n                  </Button>\r\n                  <Button className=\"btn btn-rounded w-100 my-1 btn-icon-text btn-outline-facebook\">\r\n                    <i className=\"i-Facebook-2\"></i> Sign up with Facebook\r\n                  </Button>\r\n                \r\n             \r\n            \r\n          </div>\r\n       \r\n      </div> */}\r\n      <div>\r\n        <div className=\"auth-layout-wrap\">\r\n          <img src=\"/assets/images/logo.png\" />\r\n          <div className=\"selected\" color-scheme=\"light\">\r\n            <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"employeeLogin\"\r\n              name=\"login\"\r\n              value=\"employeeLogin\"\r\n              checked\r\n              onChange={(e)=> {checked(e)}}\r\n            />\r\n            <label for=\"employeeLogin\">Employee Login</label>\r\n            </div>\r\n            <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"adminLogin\"\r\n              name=\"login\"\r\n              value=\"adminLogin\"\r\n              \r\n            />\r\n            <label for=\"adminLogin\">Admin Login</label>\r\n            </div>\r\n          </div>\r\n          <div id=\"formLogin\">\r\n                  <Formik\r\n                    initialValues={state}\r\n                    validationSchema={SigninSchema}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                         <div className=\"form-group\">\r\n                          <label htmlFor=\"name\">Organization ID</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.name}\r\n                          />\r\n                          {errors.name && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.name}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">Email ID</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                          />\r\n                          {errors.email && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"password\">Password</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                          />\r\n                          {errors.password && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"rememberBox\">\r\n                        <div >\r\n                          <input type=\"checkbox\"></input>\r\n                         <label>Remember me</label>\r\n                       </div>\r\n                       <div className=\"forgot\">\r\n                       <a>\r\n                       Forgot password?\r\n                     </a>\r\n                      </div>\r\n                      </div>\r\n                        <button\r\n                          className=\"btn btn-rounded btn-primary w-100 my-1 mt-2\"\r\n                          type=\"submit\"\r\n                          id=\"btn-login\"\r\n                        >\r\n                          Log In\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n          </div>\r\n          <div className=\"pe-3 auth-right\">\r\n                  <Link\r\n                    to=\"/session/signup\"\r\n                    className=\"btn   w-100 my-1 btn-icon-text\"\r\n                    id=\"btn-signUpNew\"\r\n                  >\r\n                     Sign up new company account\r\n                  </Link>\r\n\r\n          </div>\r\n             \r\n          \r\n        </div>\r\n      </div>\r\n    </StyleSignIn>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginWithEmailAndPassword,\r\n})(Signin);\r\n"],"sourceRoot":""}