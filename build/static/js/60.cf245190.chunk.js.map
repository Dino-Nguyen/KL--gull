{"version":3,"sources":["../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","app/views/extra-kits/AppDropdown.jsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","md","lg","xl","xxl","propTypes","id","string","href","onClick","func","title","node","isRequired","disabled","bool","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","bsPrefix","variant","size","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","AppDropdown","routeSegments","name","path","Row","Col","xs","className","map","i","Item","key","toLowerCase","eventKey","active","Divider","Toggle","as","Button","Menu","direction","drop","toUpperCase","Component","DEVICE_SIZES","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","classNames","useCol","colProps","length","decoratedBsPrefix","sizePrefix","cols"],"mappings":"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","file":"static/js/60.cf245190.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { Component } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"@gull\";\r\nimport { Dropdown, Row, Col, Button, DropdownButton } from \"react-bootstrap\";\r\n\r\nclass AppDropdown extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Home\", path: \"/\" },\r\n            { name: \"Extra Kits\", path: \"/extra-kits\" },\r\n            { name: \"App Dropdown\" },\r\n          ]}\r\n        ></Breadcrumb>\r\n        <Row>\r\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n            <SimpleCard title=\"Simple Dropdowns\" className=\"h-100\">\r\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\r\n                Single button dropdowns:\r\n              </h6>\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\"outline-primary\", \"primary\", \"success\"].map((variant, i) => (\r\n                  <DropdownButton\r\n                    variant={variant}\r\n                    className=\"me-3 mb-3\"\r\n                    title=\"Dropdown button\"\r\n                  >\r\n                    <Dropdown.Item>Action</Dropdown.Item>\r\n                    <Dropdown.Item>Another Action</Dropdown.Item>\r\n                    <Dropdown.Item>Something else here</Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"mt-0 mb-3\" />\r\n\r\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\r\n                Single button dropdowns with icon:\r\n              </h6>\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\"outline-primary\", \"primary\", \"success\"].map((variant, i) => (\r\n                  <DropdownButton\r\n                    variant={variant}\r\n                    className=\"me-3 mb-3\"\r\n                    title=\"Dropdown button\"\r\n                  >\r\n                    <Dropdown.Item>\r\n                      <i className=\"i-Bell\"> </i> Action\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <i className=\"i-Download-from-Cloud\"> </i> Another action\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <i className=\"i-Money-Bag\"> </i> Something else here\r\n                    </Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n            </SimpleCard>\r\n          </Col>\r\n\r\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n            <SimpleCard title=\"Dropup Variation\" className=\"h-100\">\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\r\n                  \"Primary\",\r\n                  \"Secondary\",\r\n                  \"Success\",\r\n                  \"Info\",\r\n                  \"Warning\",\r\n                  \"Danger\",\r\n                ].map((variant, i) => (\r\n                  <DropdownButton\r\n                    key={i}\r\n                    variant={variant}\r\n                    className=\"me-3 mb-3\"\r\n                    title={variant}\r\n                    variant={variant.toLowerCase()}\r\n                  >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" active>\r\n                      Active Item\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n            </SimpleCard>\r\n          </Col>\r\n\r\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n            <SimpleCard title=\"Size Variation\" className=\"h-100\">\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\"Primary\", \"Success\", \"warning\"].map((variant, i) => (\r\n                  <DropdownButton\r\n                    key={i}\r\n                    size=\"lg\"\r\n                    className=\"me-3 mb-3\"\r\n                    title={variant}\r\n                    variant={variant.toLowerCase()}\r\n                  >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" active>\r\n                      Active Item\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"mt-0 mb-3\" />\r\n\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\"Primary\", \"Success\", \"warning\"].map((variant, i) => (\r\n                  <DropdownButton\r\n                    key={i}\r\n                    size=\"sm\"\r\n                    className=\"me-3 mb-3\"\r\n                    title={variant}\r\n                    variant={variant.toLowerCase()}\r\n                  >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" active>\r\n                      Active Item\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"mt-0 mb-3\" />\r\n\r\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\r\n                Single Icon Dropdown:\r\n              </h6>\r\n\r\n              <div className=\"d-flex flex-wrap\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle\r\n                    className=\"me-3 mb-3 toggle-hidden\"\r\n                    as={Button}\r\n                    variant=\"primary\"\r\n                  >\r\n                    <span className=\"_dot _inline-dot me-1\"></span>\r\n                    <span className=\"_dot _inline-dot me-1\"></span>\r\n                    <span className=\"_dot _inline-dot\"></span>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" active>\r\n                      Active Item\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle\r\n                    className=\"me-3 mb-3 toggle-hidden\"\r\n                    variant=\"secondary\"\r\n                  >\r\n                    <span className=\"_dot _inline-dot bg-warning me-1\"></span>\r\n                    <span className=\"_dot _inline-dot bg-warning me-1\"></span>\r\n                    <span className=\"_dot _inline-dot bg-warning\"></span>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle\r\n                    className=\"me-3 mb-3 toggle-hidden rounded-circle\"\r\n                    variant=\"success\"\r\n                  >\r\n                    <span className=\"_dot _inline-dot me-1\"></span>\r\n                    <span className=\"_dot _inline-dot me-1\"></span>\r\n                    <span className=\"_dot _inline-dot\"></span>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle className=\"me-3 mb-3 toggle-hidden border-0 bg-white d-flex flex-column\">\r\n                    <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                    <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                    <span className=\"_dot _inline-dot bg-primary\"></span>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            </SimpleCard>\r\n          </Col>\r\n\r\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n            <SimpleCard title=\"Other variation\" className=\"h-100\">\r\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\r\n                Hidden Toggle:\r\n              </h6>\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\"Primary\", \"Success\", \"warning\"].map((direction, i) => (\r\n                  // <Dropdown key={i}>\r\n                  //   <Dropdown.Toggle\r\n                  //     split\r\n                  //     className=\"me-3 mb-3 toggle-hidden\"\r\n                  //     variant={variant.toLowerCase()}\r\n                  //     key={variant}\r\n                  //   >\r\n                  //     {variant}\r\n                  //   </Dropdown.Toggle>\r\n                  //   <Dropdown.Menu>\r\n                  //     <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                  //     <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                  //     <Dropdown.Item eventKey=\"3\" active>\r\n                  //       Active Item\r\n                  //     </Dropdown.Item>\r\n                  //     <Dropdown.Divider />\r\n                  //     <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  //   </Dropdown.Menu>\r\n                  // </Dropdown>\r\n                  <DropdownButton\r\n                    key={i}\r\n                    className=\"me-3 mb-3\"\r\n                    id={`dropdown-button-drop-${direction}`}\r\n                    drop={direction}\r\n                    variant={direction.toLowerCase()}\r\n                    title={direction}\r\n                  >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\" active>\r\n                      Active Item\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"mt-0 mb-3\" />\r\n\r\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\r\n                Toggle Icon Direction:\r\n              </h6>\r\n              <div className=\"d-flex flex-wrap\">\r\n                {[\"up\", \"down\", \"start\", \"end\"].map((direction, i) => (\r\n                  <DropdownButton\r\n                    key={i}\r\n                    className=\"me-3 mb-3\"\r\n                    id={`dropdown-button-drop-${direction}`}\r\n                    drop={direction}\r\n                    variant=\"primary\"\r\n                    title={direction.toUpperCase()}\r\n                  >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                  </DropdownButton>\r\n                ))}\r\n              </div>\r\n\r\n              <hr className=\"mt-0 mb-3\" />\r\n\r\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\r\n                Dropdown Menu Align:\r\n              </h6>\r\n              <div className=\"d-flex flex-wrap\">\r\n                <DropdownButton\r\n                  key={1}\r\n                  className=\"me-3 mb-3\"\r\n                  id={`dropdown-button-drop-end`}\r\n                  drop=\"end\"\r\n                  variant=\"primary\"\r\n                  title=\"Menu Align Right\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </DropdownButton>\r\n                <DropdownButton\r\n                  key={2}\r\n                  className=\"me-3 mb-3\"\r\n                  id={`dropdown-button-drop-start`}\r\n                  drop=\"start\"\r\n                  variant=\"primary\"\r\n                  title=\"Menu Align Left\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </DropdownButton>\r\n              </div>\r\n            </SimpleCard>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppDropdown;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...classes, ...spans)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"sourceRoot":""}