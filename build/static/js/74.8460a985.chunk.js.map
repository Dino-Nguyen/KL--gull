{"version":3,"sources":["app/views/sessions/Signup.jsx","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"names":["Signup","state","email","username","password","repassword","handleSubmit","values","setSubmitting","console","log","className","style","backgroundImage","backgroundSize","src","alt","to","initialValues","this","validationSchema","SignupSchema","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","htmlFor","name","type","onChange","onBlur","value","Component","yup","shape","required","min","oneOf","connect","user","_excluded","useButtonProps","tagName","disabled","href","target","rel","onClick","tabIndex","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","Button","React","_ref","ref","asProp","as","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","_jsx","displayName","bsPrefix","variant","size","active","prefix","useBootstrapPrefix","classNames","defaultProps"],"mappings":"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","file":"static/js/74.8460a985.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n  };\r\n\r\n  handleSubmit = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\r\n        }}\r\n      >\r\n        <div className=\"auth-content\">\r\n          <div className=\"card o-hidden\">\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-md-6 text-center \"\r\n                style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\r\n                }}\r\n              >\r\n                <div className=\"ps-3 auth-right\">\r\n                  <div className=\"auth-logo text-center mt-4\">\r\n                    <img src=\"assets/images/logo.png\" alt=\"\" />\r\n                  </div>\r\n                  <div className=\"flex-grow-1\"></div>\r\n                  <div className=\"w-100 mb-4\">\r\n                    <Link\r\n                      to=\"/session/signin\"\r\n                      className=\"btn btn-rounded btn-outline-primary btn-outline-email w-100 my-1 btn-icon-text\"\r\n                    >\r\n                      <i className=\"i-Mail-with-At-Sign\"></i> Sign in with Email\r\n                    </Link>\r\n\r\n                    <Button className=\"btn btn-outline-google w-100 my-1 btn-icon-text btn-rounded\">\r\n                      <i className=\"i-Google-Plus\"></i> Sign in with Google\r\n                    </Button>\r\n                    <Button className=\"btn btn-outline-facebook w-100 my-1 btn-icon-text btn-rounded\">\r\n                      <i className=\"i-Facebook-2\"></i> Sign in with Facebook\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"flex-grow-1\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"p-4\">\r\n                  <h1 className=\"mb-3 text-18\">Sign Up</h1>\r\n                  <Formik\r\n                    initialValues={this.state}\r\n                    validationSchema={SignupSchema}\r\n                    onSubmit={this.handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"username\">Your name</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded\"\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.username}\r\n                          />\r\n                          {errors.username && touched.username && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.username}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">Email address</label>\r\n                          <input\r\n                            name=\"email\"\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                          />\r\n                          {errors.email && touched.email && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"password\">Password</label>\r\n                          <input\r\n                            name=\"password\"\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                          />\r\n                          {errors.password && touched.password && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"repassword\">Retype password</label>\r\n                          <input\r\n                            name=\"repassword\"\r\n                            className=\"form-control form-control-rounded\"\r\n                            type=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.repassword}\r\n                          />\r\n                          {errors.repassword && touched.repassword && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.repassword}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-primary w-100 my-1 btn-rounded mt-3\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Sign Up\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignupSchema = yup.object().shape({\r\n  username: yup.string().required(\"email is required\"),\r\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Password must be 8 character long\")\r\n    .required(\"password is required\"),\r\n  repassword: yup\r\n    .string()\r\n    .required(\"repeat password\")\r\n    .oneOf([yup.ref(\"password\")], \"Passwords must match\"),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Signup);\r\n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}