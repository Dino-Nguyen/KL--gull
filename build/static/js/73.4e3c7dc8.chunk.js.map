{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"names":["ForgotPasswordSchema","yup","shape","email","required","ForgotPassword","state","handleChange","event","persist","setState","target","name","value","handleSubmit","isSubmitting","props","loginWithEmailAndPassword","className","style","backgroundImage","src","alt","initialValues","this","validationSchema","onSubmit","values","errors","touched","handleBlur","htmlFor","type","onChange","onBlur","to","backgroundSize","Component","connect","PropTypes","func","isRequired","user","_excluded","useButtonProps","tagName","disabled","href","rel","onClick","tabIndex","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","Button","React","_ref","ref","asProp","as","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","_jsx","displayName","bsPrefix","variant","size","active","prefix","useBootstrapPrefix","classNames","defaultProps"],"mappings":"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","file":"static/js/73.4e3c7dc8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { loginWithEmailAndPassword } from \"app/redux/actions/LoginActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ForgotPasswordSchema = yup.object().shape({\r\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\r\n});\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    email: \"watson@example.com\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (value, { isSubmitting }) => {\r\n    this.props.loginWithEmailAndPassword(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\r\n        }}\r\n      >\r\n        <div className=\"auth-content\">\r\n          <div className=\"card o-hidden\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"p-4\">\r\n                  <div className=\"auth-logo text-center mb-4\">\r\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n                  </div>\r\n                  <h1 className=\"mb-3 text-18\">Forgot Password</h1>\r\n                  <Formik\r\n                    initialValues={this.state}\r\n                    validationSchema={ForgotPasswordSchema}\r\n                    onSubmit={this.handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">Email address</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                          />\r\n                          {errors.email && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-rounded btn-primary w-100 mt-2\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Reset Password\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n\r\n                  <div className=\"mt-3 text-center\">\r\n                    <Link to=\"/session/signin\" className=\"text-muted\">\r\n                      <u>Signin</u>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-6 text-center \"\r\n                style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\r\n                }}\r\n              >\r\n                <div className=\"pe-3 auth-right\">\r\n                  <Button className=\"btn btn-rounded btn-outline-primary btn-outline-email w-100 my-1 btn-icon-text\">\r\n                    <i className=\"i-Mail-with-At-Sign\"></i> Sign up with Email\r\n                  </Button>\r\n                  <Button className=\"btn btn-rounded btn-outline-google w-100 my-1 btn-icon-text\">\r\n                    <i className=\"i-Google-Plus\"></i> Sign up with Google\r\n                  </Button>\r\n                  <Button className=\"btn btn-rounded w-100 my-1 btn-icon-text btn-outline-facebook\">\r\n                    <i className=\"i-Facebook-2\"></i> Sign up with Facebook\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginWithEmailAndPassword,\r\n})(ForgotPassword);\r\n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}